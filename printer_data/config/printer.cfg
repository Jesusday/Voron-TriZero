#Need to tune following https://ellis3dp.com/Print-Tuning-Guide/
# To get the other printer on mainsail follow this https://www.youtube.com/watch?v=sSB-l3RX6BQ

#[virtual_sdcard]
#path: /home/biqu/printer_data/gcodes
#on_error_gcode: CANCEL_PRINT


## host MCU service is preinstalled and ready to use with:
#[mcu CB1]
#serial: /tmp/klipper_host_mcu

#[include generic-bigtreetech-xxx.cfg]

# Backup files using https://staubgeborener.github.io/klipper-backup/quickstart/

# External Files
#####################################################################
[include shell_command.cfg]                # This is for the backup to github https://staubgeborener.github.io/klipper-backup/quickstart/
[include mainsail.cfg]
[include EXTRAS/toolhead_btt_ebbcan_G0B1_v1.2.cfg]   # Used https://github.com/Esoterical/voron_canbus (have to reflash the U2C firmware), Also looked at https://github.com/EricZimmerman/VoronTools/blob/main/EBB_CAN.md
### U2C Borad is V2.1 and EBB36 & EBB42 are also V1.2

# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

## Voron Design VORON 0.2 SKR Mini E3 V3 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Motor currents                                                               [extruder] [stepper] and {_HOME_X/Y] macro sections
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0

[mcu]          ######Update all the MCUs by SSH to PI and run "~/update_klipper.sh".########
#Use "sudo nano ~/update_klipper.sh" to edit the file.
#See these two locations for more informaiton.
  #https://www.youtube.com/watch?v=K-luKltYgpU (Check notes).
  #https://www.klipper3d.org/SDCard_Updates.html (Typical Upgrade Procedure Section).
  #Raspberry PI 5 
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_0E0046000750414235363020-if00
restart_method: command

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor host_temp]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 200 #Voron Design says 350
max_accel: 2000 #Voron Design says 3000
max_z_velocity: 15 #Voron Design says 50
max_z_accel: 300 #Voron Design says 350
square_corner_velocity: 6.0 #Voron Design says 10.0

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>


#####################################################################
#      X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
[stepper_x]
step_pin: PB13
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PB12                                                       # Check motor direction in link above. If inverted, add a ! before PB12
enable_pin: !PB14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors

endstop_pin: ^PC0
position_endstop: 120
position_max: 120
homing_speed: 20
homing_retract_dist: 3
second_homing_speed: 3.0
homing_positive_dir: True

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: False
## For LDO-35STH48-1684AH 1.68A
run_current: 0.8            # Max is 1.1
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle


##  A Stepper - Right
[stepper_y]
step_pin: PB10
dir_pin: PB2                                                        # Check motor direction in link above. If inverted, add a ! before PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors

endstop_pin: ^PC1
position_endstop: 120
position_max: 120
homing_speed: 20
homing_retract_dist: 3
second_homing_speed: 3.0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: False
run_current: 0.8            # Max is 1.1
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle


#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
[stepper_z]
step_pin: PB0
dir_pin: !PC5                                                       # Remove the ! before PC5 if motor direction is inverted.
enable_pin: !PB1
rotation_distance: 32     # There are 16 tooth pullies that are 2 pitch so the rotational distance is 32.
microsteps: 32

endstop_pin: ^PC2
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: 5  #120
position_max: 120
position_min: -1.5    #-2.5 in trident
homing_speed: 20
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: False
## For OMC (StepperOnline) 17HS15-1504S-X1 1.50A 
run_current: 0.7         # Max is 1.0
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle


##  Z1 Stepper - Rear Center
[stepper_z1]
step_pin: EXP1_6 #PB13
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: EXP1_5  #PB12
enable_pin: !EXP1_7 #!PB14
rotation_distance: 32
microsteps: 32

# [tmc2209 stepper_z1]
# uart_pin: PC11
# tx_pin: PC10
# uart_address: 1
# interpolate: False
# run_current: 0.7         # Max is 1.0
# sense_resistor: 0.110
# stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle


## Z2 Stepper - Front Right
[stepper_z2]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
rotation_distance: 32
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: False
run_current: 0.7         # Max is 1.0
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle


#####################################################################
#   Bed
#####################################################################

[heater_bed]
heater_pin: PC9
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PC4
smooth_time: 3.0     # Not sure what this is for
max_power: 0.6                                                      # 0.6 Only needed for 100w pads
min_temp: 0
max_temp: 120
control: pid                                                        # Do PID calibration after initial checks
pid_kp: 68.453
pid_ki: 2.749
pid_kd: 426.122

# [bed_mesh]
# speed: 150
# horizontal_move_z: 5
# mesh_min: 25,35.0
# mesh_max: 225.0,220
# probe_count: 6,6
# algorithm: bicubic
# fade_start: 1
# fade_end: 10
# fade_target: 0


#####################################################################
#   Fan Control                 ##
#####################################################################

[controller_fan electronic_cotrollers_fan]
pin: PA1
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010
idle_speed: 0.2
stepper: stepper_x, stepper_y            #This fan will kick on when the X or Y stepper kicks on

# # For upgraded to chamber temperature control
# [temperature_fan exhaust_fan]
# pin: PC7
# sensor_pin: PA0
# shutdown_speed: 0.0
# sensor_type: Generic 3950 #chamber_temp
# control: watermark
# min_temp: 0
# max_temp: 100
# target_temp: 45.0            #This is the Chamber kickon temperature
# max_delta: 2                 #The delta of kickon/kickoff of set temperature
# max_speed: 1.0               #Adjust this to reduce noise
# gcode_id: C


[temperature_fan _electronic_fan_right]
pin: PC6
shutdown_speed: 1.0         #If the printer errors, fan set to 100%
sensor_type: temperature_host
control: watermark
min_temp: 10
max_temp: 200
target_temp: 40.0            #This is the PI kickon temperature
max_delta: 2                 #The delta of kickon/kickoff of set temperature
max_speed: 1.0               #Adjust this to reduce noise

[controller_fan electronic_fan_left]
pin: PB15
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010
idle_speed: 0.2
heater: heater_bed           #This fan will kick on when the bed heater kicks on


#####################################################################
#   Filament Runout Sensor      ###
#####################################################################

#[filament_switch_sensor Filament_Runout_Sensor]
#pause_on_runout: True
#runout_gcode: PAUSE
#switch_pin: PC15


#####################################################################
#   LED Control           ##  From Trident, See what was on V2
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PF9
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

# [output_pin LIGHTS]
# pin: PA8
# value: 0
# shutdown_value: 0

# [gcode_macro lights_on]
# gcode:
#     SET_PIN PIN=LIGHTS VALUE=1.0

# [gcode_macro lights_off]
# gcode:
#     SET_PIN PIN=LIGHTS VALUE=0.0


#####################################################################
#   Homing and Gantry Adjustment Routines          See Trident, not sure where the bellow came from, but is different. Something are missing I would say
#####################################################################

[idle_timeout]
timeout: 1800

## Had to remove due to Homing Override being here too ###
# [homing_override]
# axes: xyz
# set_position_z: 0
# gcode:
#    G90
#    G0 Z5 F600
#   {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

#   {% if home_all or 'X' in params %}
#     _HOME_X
#   {% endif %}
  
#   {% if home_all or 'Y' in params %}
#     _HOME_Y
#   {% endif %}
  
#   {% if home_all or 'Z' in params %}
#     _HOME_Z
#   {% endif %}


[safe_z_home]                      # Required per tri-zero
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position: 80,120
speed: 20   #50.0
z_hop: 5


[z_tilt]                     # Required per tri-zero
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

##--------------------------------------------------------------------
## Uncomment below for 250mm build
z_positions:
   -50, 18
   125, 298
   300, 18
points:
   30, 5
   125, 195
   220, 5

## Uncomment below for 300mm build
#z_positions:
#   -50, 18
#   150, 348
#   350, 18
#points:
#   30, 5
#   150, 245
#   270, 5

## Uncomment below for 350mm build
#z_positions:
#   -50, 18
#   175, 398
#   400, 18
#points:
#   30, 5
#   175, 295
#   320, 5


##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075


#####################################################################
#   Macros              See what Trident has
#####################################################################

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    G28                            ; home all axes
    Z_TILT_ADJUST                  ; required to level the bed
    G28                            ; home all axes again - this was added to follow the trident
    G90                            ; absolute positioning    
    G1 Z20 F3000                   ; move nozzle away from bed
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y-10} F3600          ; park nozzle at rear
    
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z
    G1 Z30


# ## These are from switchwire for this board
# [gcode_macro PRINT_START]
# #   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
# gcode:
#     M117 Homing...                 ; display message
#     G28 Y0 X0 Z0
    
#     ##Purge Line Gcode
#     #G92 E0;
#     #G90
#     #G0 X5 Y5 F6000
#     #G0 Z0.4
#     #G91
#     #G1 X120 E30 F1200;
#     #G1 Y1
#     #G1 X-120 E30 F1200;
#     #G92 E0;
#     #G90
    
#     G1 Z15.0 F600 ;move the platform down 15mm
#     G1 X125 Y125 F3000
#     G92 E0 ;zero the extruded length again
#     G1 F9000
#     M117 Printing...


# [gcode_macro PRINT_END]
# #   Use PRINT_END for the slicer ending script
# gcode:
#     #   Get Boundaries
#     {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
#     {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
#     {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
#     #   Check end position to determine safe directions to move
#     {% if printer.toolhead.position.x < (max_x - 20) %}
#         {% set x_safe = 20.0 %}
#     {% else %}
#         {% set x_safe = -20.0 %}
#     {% endif %}

#     {% if printer.toolhead.position.y < (max_y - 20) %}
#         {% set y_safe = 20.0 %}
#     {% else %}
#         {% set y_safe = -20.0 %}
#     {% endif %}

#     {% if printer.toolhead.position.z < (max_z - 2) %}
#         {% set z_safe = 2.0 %}
#     {% else %}
#         {% set z_safe = max_z - printer.toolhead.position.z %}
#     {% endif %}
    
#     #  Commence PRINT_END
#     M400                             ; wait for buffer to clear
#     G92 E0                           ; zero the extruder
#     G1 E-4.0 F3600                   ; retract
#     G91                              ; relative positioning
#     G0 Z{z_safe} F3600               ; move nozzle up
#     G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
#     M104 S0                          ; turn off hotend
#     M140 S0                          ; turn off bed
#     M106 S0                          ; turn off fan
#     G90                              ; absolute positioning
#     G0 X{max_x / 2} Y{max_y} F3600   ; park nozzle at rear
#     M117 Finished!